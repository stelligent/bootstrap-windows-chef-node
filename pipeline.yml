AWSTemplateFormatVersion: "2010-09-09"
Description: Continuous Delivery CodePipeline that automatically  build, tests, deploys the CS-260 Lab Environment
Parameters:
  GitHubToken:
    Type: String
    NoEcho: true
  GitHubUser:
    Type: String
    Default: stelligent
  GitHubRepoName:
    Type: String
    Default: bootstrap-windows-chef-node
  GitHubBranchName:
    Type: String
    Default: master
  S3Bucket:
    Description: S3 bucket containing the Chef Cookbooks
    Type: String
    Default: snhu-chef
  Runlist:
    Description: Runlist for Workspace
    Type: String
    Default: "snhu-eclipse"
Resources:
  ManualApprovalStageGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: ManaulApprovalStageGroup
      Path: /
      Policies:
        -
          PolicyName: manual-approval-stage-service
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Deny
              Action:
              - codepipeline:PutApprovalResult
              Resource: "*"
  WorkspaceServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: rds-service
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                - "workspaces:*"
                Resource: "*"
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: codepipeline-service
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action: "*"
                Resource: "*"
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: codebuild-workspaces-ssm
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "workspaces:*"
                  - "ssm:*"
                  - "s3:*"
                  - "ec2:*"
                  - "codepipeline:PutJobSuccessResult"
                  - "codepipeline:PutJobFailureResult"
                  - "cloudformation:*"
                Resource: "*"
              -
                Action:
                  - "logs:*"
                Effect: Allow
                Resource: "arn:aws:logs:*:*:*"
  InstallChefProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Codebuild project to install Chef on Workspace
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.3.6
      Source:
        BuildSpec: buildspec_install_chef.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
  ExecuteChefProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Codebuild project to install Chef on Workspace
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.3.6
      Source:
        BuildSpec: buildspec_execute_chef.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
  TestChefProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Description: Codebuild project to install Chef on Workspace
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.3.6
      Source:
        BuildSpec: buildspec_tests.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
  MyCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref "S3Bucket"
        Type: S3
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Commit
          Actions:
          - Name: Commit
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: 1
            OutputArtifacts:
              - Name: CS-260
            Configuration:
              Owner: !Ref GitHubUser
              Repo: !Ref GitHubRepoName
              Branch: !Ref GitHubBranchName
              OAuthToken: !Ref GitHubToken
        - Name: BuildWorkspace
          Actions:
          - Name: WorkspaceProvisioning
            RunOrder: 1
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: CloudFormation
            Configuration: {
                "ActionMode": "CREATE_UPDATE",
                "Capabilities": "CAPABILITY_IAM",
                "StackName": "WorkspaceBuilder",
                "TemplatePath": "CS-260::workspace.yml",
                "TemplateConfiguration": "CS-260::configuration.json",
                "RoleArn": {
                    "Fn::GetAtt": [
                        "WorkspaceServiceRole",
                        "Arn"
                    ]
                },
                "OutputFileName": "WorkspaceOutput.json"
            }
            InputArtifacts:
              - Name: CS-260
            OutputArtifacts:
              - Name: WorkspaceOutput
        - Name: ConfigureWorkspace
          Actions:
            - Name: InstallChef
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref InstallChefProject
              InputArtifacts:
                - Name: CS-260
            - Name: ExecuteChef
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ExecuteChefProject
              InputArtifacts:
                - Name: CS-260
            
        - Name: TestWorkspace
          Actions:
            - Name: TestChef
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref TestChefProject
              InputArtifacts:
                - Name: CS-260

        - Name: Production
          Actions:
          - Name: Approval
            ActionTypeId:
              Category: Approval
              Owner: AWS
              Version: 1
              Provider: Manual
